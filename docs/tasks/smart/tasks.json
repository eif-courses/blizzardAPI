{
  "0": {
    "head":"Objektiškai orientuotojo programavimo principai: klasės, modifikatoriai, konstruktoriai, metodai, baziniai duomenų tipai.",
    "aim":"Sukurti konsolinę programą laisvai pasirinkta tema (nemažiau 8 klasės) naudojant Maven arba Gradle projektų valdymo ir gamybos įrankį. Susipažinti su kodo versijavimu.",
    "example":"<b>Pseudokodas.</b> Algoritmas aprašytas žodžiu. <a target='_blank' href='http://blog.teamtreehouse.com/java-and-everyday-objects'><span class='nuoroda'>(http://pavyzdys.lt)</span></a>. <b>UML diagrama.</b> Braižant galima naudoti bet kuriuos jums žinomus įrankius. Diagramos pavyzdį rasite čia:<a target='_blank' href='https://d2slcw3kip6qmk.cloudfront.net/marketing/pages/chart/class-diagram-for-online-shopping-system-UML/UML_class_diagram_shopping-800x621.PNG'> <span class='nuoroda'>(https://umldiagram.example).</span></a> Projektų valdymo ir automatizavimo įrankiai: <b>Maven</b> - (<a href='https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html'><span class='nuoroda'>https://maven.apache.org/</span></a>). <b>Gradle</b> - (<a href='https://docs.gradle.org/current/release-notes.html'><span class='nuoroda'>https://docs.gradle.org/</span></a>).",
    "tasks":{"pirma":"Įsidiegti vieną iš siūlomų programavimo aplinkų IntelliJ IDEA, ECLIPSE arba Netbeans. Sukurti Maven arba Gradle projektą skirtą Java aplikacijai. Prijungti 3 laisvai pasirinktas bibliotekas (gradle ar maven) ir jas panaudoti projekte.",
      "antra":"Esamam projektui sukurti skriptą (gradle, maven), kuriame būtų vykdomos kelios iš eilės einančios užduotys (angl. tasks). Išsiaiškinti kas yra JAR formatas ir pasirinktinai prijungti 2 skirtingas bibliotekas.",
      "trecia":"Nubrėžti programos UML klasių diagramą ir aprašytį pagrindinį programos algoritmą pseudokodu.",
      "ketvirta":"Užsiregistruoti bet kurioje kodo versijavimo cloud aplinkų: pvz.: Github, Bitbucket, Docker ar kt. jums žinomą. Patalpinti pirmąjį projektą ir įvykdyti kelis skirtingus commit'us."
    }
  },
  "1": {
    "head":"Paveldėjimas, abstrakti klasė, interfeisas, enum, static raktinis žodis.",
    "aim":"Sukurti programą (konsolinę arba su GUI), kuri galėtų nustatyti ligos diagnozę iš esamų gydimo įstaigų duomenų bazių ir pateiktų rekomendacijas.",
    "example":"Pavyzdžiui: Bendras kraujo tyrimas matuoja šiuos rodiklius (<span class='nuoroda'><a target='_blank' href='http://sosdiagnostika.lt/paslaugos/kraujo-tyrimai/bendrieji-kraujo-tyrimai/bendras-kraujo-tyrimas/'>diagnostika.lt/</a></span>). Ligos diagnozės priežąstis, rodiklių aprašymus ir kita informacija rasite internete. Vienas iš svetainių pavyzdžių anglų kalba: (<span class='nuoroda'><a href='http://www.mayoclinic.org/symptoms/high-hemoglobin-count/basics/definition/sym-20050862'>http://www.mayoclinic.org/symptoms/high-hemoglobin-count/</a></span>).",
    "tasks":{"pirma":"Sukurti duomenų bazę ligos diagnozei nustatyti. Privalomi tyrimo duomenų parametrai: kodas, rodiklio trumpinys, aprašymas, normos ribos ir kt. jei reikalingi. Rodiklių skaičius nemažiau 10.",
      "antra":"Sukurti algoritmą, kuris nuskaitytų paciento tyrimo rezultatus, nustatytų ligos diagnozę, pateiktų rekomendacijas ir tolimesnę gydimo eigą. Ligų sąrašas nemažiau 5 skirtingos ligos.",
      "trecia":"Paciento tyrimo rezultatai gali būti realūs arba generuojami atsitiktinai. Juos privalote išsaugoti duomenų bazėje. Numatyti galimybę peržiūrėti rodiklius, ligų sąrašą ir aprašymą, pateikti visų pacientų diagnozes ir rekomendacijų sąrašą.",
      "ketvirta": "Programoje privalote panaudoti: paveldėjimą, raktinį žodį static, interfeisą, abstrakčią klasę, kompoziciją, enum."
    }
  },

  "2": {
    "head":"Vidinės klasės, raktinis žodis final, vidiniai interfeisai.",
    "aim":"Sugalvoti realaus gyvenimo situaciją (temą) ir sukurti konsolinę programą, kurioje įgyvendinti žemiau pateiktus uždavinius.",
    "example":"<b>Member klasės pavyzdys.</b> Kompiuteris ir jo vidinės klasės: [<i>Procesorius, Atmintis, CD-ROM,</i> ir t.t.). <br/><b>Builder pavyzdys</b>. (<a target='_blank' href='https://gist.github.com/eif-courses/2c47471d72b645ee76ef7e00a8598e41'><span class='nuoroda'>https://gist.github.com/eif-courses/builder</span></a>).<br/><b>Filtro pavyzdys</b>. <a target='_blank' href='https://www.javatpoint.com/java-8-stream-filter'><span class='nuoroda'>https://www.javatpoint.com/java-8-stream-filter</span></a>",
    "tasks":{"pirma":"Sukurti prasmingas klases ir interfeisus: <i> kelias vidines klases (angl. Member class), vidinį interfeisą, static vidinę klasę, vidinę lokalią ir anoniminę klases.</i>",
      "antra":"Realizuoti projektavimo šabloną (angl. Design pattern) Builder. Taip pat numatyti išimtis (angl. Exceptions) naudojant šiuos raktinius žodžius: <b>try, catch.</b>",
      "trecia":"Sukurti keletą perkrautų metodų (angl. Overloaded). Panaudoti bazinius Object klasės metodus toString() ir hashCode().",
      "ketvirta": "Sukurti du skirtingus metodus, kurių parametrai būtų lambda išraiškos ir predikatas (angl. Predicate). Sugalvoti savo unikalų filtrą naudojantis <b>java.util.stream.Collectors</b>"
    }
  },
  "3": {
    "head":"Parametrizuojami tipai (generics), anotacijos.",
    "aim":"Sukurti programą laisvai pasirinkta tema, kurioje būtų įgyvendinti žemiau pateikti uždaviniai.",
    "example":"Anotacijoms nuskaityti naudoti (angl. reflection) biblioteka (<span class='nuoroda'><a target='_blank' href='https://www.mkyong.com/java/java-custom-annotations-example/'>anotacijos_pvz</a></span>). Bibliotekos pavyzdys, kurioje yra naudojamos anotacijos: (<span class='nuoroda'><a href='https://projectlombok.org/'>bibliotekos_pvz</a></span>).",
    "tasks":{"pirma":"Sukurti generic klasę, kurioje realizuoti 5 skirtingus prasmingus generic metodus. Tada sukurti papildomų klasių, kuriose panaudoti wildcards  <i>(?, ? super Tipas, ? extends Tipas)</i>.",
      "antra":"Sukurti keletą skirtingų klasių/objektų ir skirtingų rūšiavimo filtrų (nemažiau 4) naudojantis šiais interfeisais <i>Comparable ir Comparator</i>. Pasirinktinai iš Collections klasės pasirinkti 5 skirtingus metodus ir juos panaudoti.",
      "trecia":"Sukurti 6 skirtingų rūšių anotacijas. Sukurtoms anotacijoms sugalvoti paskirtį ir aprašyti prasmingus metodus. Šias anotacijas panaudoti savo projekte bei pademonstruoti jų veikimą.",
      "ketvirta": "Prijungti ir panaudoti laisvai pasirinktą biblioteką, kurioje būtų naudojamos anotacijos."
    }
  },
  "4": {
    "head":"Java Swing ir AWT GUI elementai, Graphics, Grapics2d. Klaidų apdorojimo mechanizmas.",
    "aim":"Sukurti programą laisvai pasirinkta tema su grafine vartotojo sąsaja, kurioje panaudoti skirtingus išdėstymo būdus, komponentus ir įvykius. ",
    "example":"Kaip įsidiegti Java SE Runtime Environment (JRE) linux aplinkoje: (<a target='_blank' href='http://www.webupd8.org/2014/03/how-to-install-oracle-java-8-in-debian.html'><span class='nuoroda'>how-to-install-oracle-java-8-in-debian.html</span></a>). Nemokama virtuali mašina skirta kitai operacinei sistemai įsidiegti: (<span class='nuoroda'><a href='https://my.vmware.com/en/web/vmware/free#desktop_end_user_computing/vmware_workstation_player/12_0'>http://wmvare_player.com</a> </span>). Išdėstymo būdai JAVA informaciją rasite čia: (<span class='nuoroda'><a href='https://docs.oracle.com/javase/tutorial/uiswing/layout/visual.html'>https://docs.oracle.com/javase/tutorial/uiswing/layout/visual.html</a></span>).",
    "tasks":{"pirma":"Sukurti grafinę sąsają savo programai. Panaudoti keletą skirtingų išdėstymo būdų (angl. layouts), valdiklių (angl. controls), įvykių (angl. Events).",
      "antra":"Panaudoti Graphics, Graphics2D bibliotekas ir nupiešti grafines figūras. Panaudoti skirtingas gijas (angl. Threads) nupieštiems objektams valdyti.",
      "trecia":"Sukurti <b>unchecked</b> ir <b>checked</b> tipo išimtis. Sukurti bent vieną <b>unikalų metodą</b>, kuris klasifikuotų pagal tam tikrą požymį pvz: klaidos kodą ir reaguotų skirtingai priklausomai nuo klaidos kodo.",
      "ketvirta":"Sukurti savo programos JAR Executable failą ir jį paleisti skirtingose operacinėse pvz: Windows ir Unix OS arba Mac OSX ir kt. Jeigu reikia papildomai privalote susikonfigūruoti JAVA JRE kitoje operacinėje sistemoje."
    }
  },
  "5": {
    "head":"Java FX, Web services APIs, Desktop application.",
    "aim":"Sukurti aplikaciją su grafine vartotojo sąsaja (naudoti Java FX) laisvai pasirinkta tema. Privalote panaudoti bent vieną iš esamų programavimo interfeisų (APIs), juos rasite šiuo adresu (<span class='nuoroda'><a target='_blank' href='https://market.mashape.com/'>https://market.mashape.com/</a></span>).",
    "example":"Unirest biblioteka: naudojant gradle dependencies dalyje pridėti šią eilutę -> <b>compile 'com.mashape.unirest:unirest-java:1.3.27'</b><br/>Java FX programų pavyzdžiai: (<a target='_blank' href='https://jaxenter.com/20-javafx-real-world-applications-123653.html'><span class='nuoroda'>https://jaxenter.com/20-javafx-real-world-applications-123653.html</span></a>).",
    "tasks":{"pirma":"Sukurti aplikaciją pasirinkta tema naudojantis vienu ar keliais web serviso APIs, privalote sugalvoti realią programos paskirtį.",
      "antra":"Duomenų nuskaitymui iš pasirinkto Web serviso API prijungti laisvai pasirinktą HTTP užklausoms skirtą biblioteką, pavyzdžiui (<span class='nuoroda'><a target='_blank' href='http://unirest.io/java'>unirest.io/</a></span>).",
      "trecia":"Grafinės sąsajos langas turėtų būti išbaigtas panaudoti keli išdėstymo būdai, skirtingi valdikliai (angl. controls), įvykiai. Numatyti naudotojo instrukciją (angl. help).",
      "ketvirta":"Sukurti 2 skirtingas programos temas (angl. themes) pvz. paspaudūs mygtuką būtų pakeičiamas fonas, tekstas, komponentų išdėstymas, dydis ir t.t..."
    }
  },
  "6": {
    "head":"Test Driven Development (TDD). Testavimas ir metodai taikant gerąją praktiką kuriant programas/sistemas. ",
    "aim":"Sukurti programą laisvai pasirinkta tema, remiantis Test Driven Development (TDD) principais (testų skaičius nemažiau 50). Žemiau pateikti uždaviniai yra skirstomi į etapus, kuriuos privalote patalpinti kodo versijavimo sistemoje (pvz: Github, Bitbucket ar kt.) vadovaujantis eiliškumu I, II, III, IV.",
    "example":"Test Driven Development pavyzdžius rasite čia: (<span class='nuoroda'><a target='_blank' href='https://technologyconversations.com/2013/12/24/test-driven-development-tdd-best-practices-using-java-examples-2/'>TDD_PVZ_1</a></span>) arba (<span class='nuoroda'><a href='https://www.guru99.com/test-driven-development.html'>TDD_PVZ_2</a></span>).",
    "tasks":{"pirma":"<b>I etapas.</b> Sukurti maven arba gradle Java projektą, pasirinktinai prijungti vieną iš testavimo karkasų pvz: JUnit.",
      "antra":"<b>II etapas.</b>  Sukurti nemažiau 50 skirtingų testų naudojantis pasirinktu karkasu pvz: JUnit. ",
      "trecia":"<b>III etapas.</b>  Neveikiančius testus privalote pataisyti, kad jie veiktų. Papildomai sukurti trūkstamas klases, metodus ir t.t. (vadovautis TDD principais).",
      "ketvirta":"<b>IV etapas. </b>Pertvarkyti kodą (angl. code refactoring) taip, kad programa būtų išbaigta ir paruošta naudojimui (angl. production). </b>  "
    }
  },
  "7": {
    "head":"Projektavimo šablonai (angl. design patterns).",
    "aim":"Tikslas sukurti programą laisvai pasirinkta tema, kurioje panaudotumėte keletą skirtingų projektavimo šablonų.",
    "example":"Projektavimo šablonai. (<span class='nuoroda'><a target='_blank' href='https://www.javatpoint.com/design-patterns-in-java'>https://www.javatpoint.com/design-patterns-in-java</span></a>).",
    "tasks":{"pirma":"Realizuoti 3 objektų kūrimo projektavimo šablonus. (angl. Creational design pattern)",
      "antra":"Realizuoti 2 srtruktūrinius  projektavimo šablonus (angl. Structural design pattern).",
      "trecia":"Realizuoti 3 elgsenos projektavimo šablonus (angl. Behavioral (angl. Structural design pattern).",
      "ketvirta":"Sukurti savo unikalų projektavimo šabloną, kuris priklausytų vienai iš trijų prieš tai pateiktų sričių: Creational, Structural, Behavioral."
    }
  },
    "8": {
      "head":"Pagrindiniai išdėstymo būdai. Views and layouts. (<span style='color: red'>INFORMACIJA TIKSLINAMA</span>).",
      "aim":"IN PROGRESS..............................",
       "example":"informacija ruošiama....",
       "tasks":{"pirma":"IN PROGRESS..............................",
          "antra":"IN PROGRESS..............................",
          "trecia":"IN PROGRESS.............................."
      }
  },
     "9": {
      "head":"Sensoriai ir kt. (<span style='color: red'>INFORMACIJA TIKSLINAMA</span>).",
      "aim":"IN PROGRESS..............................",
       "example":"informacija ruošiama....",
       "tasks":{"pirma":"IN PROGRESS..............................",
          "antra":"IN PROGRESS..............................",
          "trecia":"IN PROGRESS.............................."
      }
  },
     "10": {
      "head":"Standartiniai komponentai, controls. (<span style='color: red'>INFORMACIJA TIKSLINAMA</span>).",
      "aim":"IN PROGRESS..............................",
       "example":"informacija ruošiama....",
       "tasks":{"pirma":"IN PROGRESS..............................",
          "antra":"IN PROGRESS..............................",
          "trecia":"IN PROGRESS.............................."
      }
  },
     "11": {
      "head":"Activities, Fragmentai, Intentai, Notifications. (<span style='color: red'>INFORMACIJA TIKSLINAMA</span>).",
      "aim":"IN PROGRESS..............................",
       "example":"informacija ruošiama....",
       "tasks":{"pirma":"IN PROGRESS..............................",
          "antra":"IN PROGRESS..............................",
          "trecia":"IN PROGRESS.............................."
      }
  }

}


