{
  "0": {
    "head":"Objektiškai orientuotojo programavimo principai: klasės, modifikatoriai, konstruktoriai, metodai, baziniai duomenų tipai.",
    "aim":"Sukurti konsolinę programą laisvai pasirinkta tema (nemažiau 8 klasės) naudojant Maven arba Gradle projektų valdymo ir gamybos įrankį. Susipažinti su kodo versijavimu.",
    "example":"<b>Pseudokodas.</b> Algoritmas aprašytas žodžiu. <a target='_blank' href='http://blog.teamtreehouse.com/java-and-everyday-objects'><span class='nuoroda'>(http://pavyzdys.lt)</span></a>. <b>UML diagrama.</b> Braižant galima naudoti bet kuriuos jums žinomus įrankius. Diagramos pavyzdį rasite čia:<a target='_blank' href='https://d2slcw3kip6qmk.cloudfront.net/marketing/pages/chart/class-diagram-for-online-shopping-system-UML/UML_class_diagram_shopping-800x621.PNG'> <span class='nuoroda'>(https://umldiagram.example).</span></a> Projektų valdymo ir automatizavimo įrankiai: <b>Maven</b> - (<a href='https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html'><span class='nuoroda'>https://maven.apache.org/</span></a>). <b>Gradle</b> - (<a href='https://docs.gradle.org/current/release-notes.html'><span class='nuoroda'>https://docs.gradle.org/</span></a>).",
    "tasks":{"pirma":"Įsidiegti vieną iš siūlomų programavimo aplinkų IntelliJ IDEA, ECLIPSE arba Netbeans. Sukurti Maven arba Gradle projektą skirtą Java aplikacijai. Prijungti 3 laisvai pasirinktas bibliotekas (gradle ar maven) rasite čia: (<span class='nuoroda'><a target='_blank' href='https://mvnrepository.com/'>https://mvnrepository.com/</a></span>), jas panaudoti projekte.",
      "antra":"Esamam projektui sukurti skriptą (gradle, maven), kuriame būtų vykdomos kelios iš eilės einančios užduotys (angl. tasks). Išsiaiškinti kas yra JAR formatas ir pasirinktinai prijungti 2 skirtingas bibliotekas.",
      "trecia":"Nubrėžti programos UML klasių diagramą ir aprašytį pagrindinį programos algoritmą pseudokodu.",
      "ketvirta":"Užsiregistruoti bet kurioje kodo versijavimo cloud aplinkų: pvz.: Github, Bitbucket, Docker ar kt. jums žinomą. Patalpinti pirmąjį projektą ir įvykdyti kelis skirtingus commit'us."
    }
  },
  "1": {
    "head":"Paveldėjimas, abstrakti klasė, interfeisas, enum, static raktinis žodis.",
    "aim":"Sukurti programą (konsolinę arba su GUI), kuri galėtų nustatyti ligos diagnozę iš esamų gydimo įstaigų duomenų bazių ir pateiktų rekomendacijas.",
    "example":"Pavyzdžiui: Bendras kraujo tyrimas matuoja šiuos rodiklius (<span class='nuoroda'><a target='_blank' href='http://sosdiagnostika.lt/paslaugos/kraujo-tyrimai/bendrieji-kraujo-tyrimai/bendras-kraujo-tyrimas/'>diagnostika.lt/</a></span>). Ligos diagnozės priežąstis, rodiklių aprašymus ir kita informacija rasite internete. Vienas iš svetainių pavyzdžių anglų kalba: (<span class='nuoroda'><a href='http://www.mayoclinic.org/symptoms/high-hemoglobin-count/basics/definition/sym-20050862'>http://www.mayoclinic.org/symptoms/high-hemoglobin-count/</a></span>).",
    "tasks":{"pirma":"Sukurti duomenų bazę ligos diagnozei nustatyti. Privalomi tyrimo duomenų parametrai: kodas, rodiklio trumpinys, aprašymas, normos ribos ir kt. jei reikalingi. Rodiklių skaičius nemažiau 10.",
      "antra":"Sukurti algoritmą, kuris nuskaitytų paciento tyrimo rezultatus, nustatytų ligos diagnozę, pateiktų rekomendacijas ir tolimesnę gydimo eigą. Ligų sąrašas nemažiau 5 skirtingos ligos.",
      "trecia":"Paciento tyrimo rezultatai gali būti realūs arba generuojami atsitiktinai. Juos privalote išsaugoti duomenų bazėje. Numatyti galimybę peržiūrėti rodiklius, ligų sąrašą ir aprašymą, pateikti visų pacientų diagnozes ir rekomendacijų sąrašą.",
      "ketvirta": "Programoje privalote panaudoti: paveldėjimą, raktinį žodį static, interfeisą, abstrakčią klasę, kompoziciją, enum."
    }
  },

  "2": {
    "head":"Vidinės klasės, raktinis žodis final, vidiniai interfeisai.",
    "aim":"Sugalvoti realaus gyvenimo situaciją (temą) ir sukurti konsolinę programą, kurioje įgyvendinti žemiau pateiktus uždavinius.",
    "example":"<b>Member klasės pavyzdys.</b> Kompiuteris ir jo vidinės klasės: [<i>Procesorius, Atmintis, CD-ROM,</i> ir t.t.). <br/><b>Builder pavyzdys</b>. (<a target='_blank' href='https://gist.github.com/eif-courses/2c47471d72b645ee76ef7e00a8598e41'><span class='nuoroda'>https://gist.github.com/eif-courses/builder</span></a>).<br/><b>Filtro pavyzdys</b>. <a target='_blank' href='https://www.javatpoint.com/java-8-stream-filter'><span class='nuoroda'>https://www.javatpoint.com/java-8-stream-filter</span></a>",
    "tasks":{"pirma":"Sukurti prasmingas klases ir interfeisus: <i> kelias vidines klases (angl. Member class), vidinį interfeisą, static vidinę klasę, vidinę lokalią ir anoniminę klases.</i>",
      "antra":"Realizuoti projektavimo šabloną (angl. Design pattern) Builder. Taip pat numatyti išimtis (angl. Exceptions) naudojant šiuos raktinius žodžius: <b>try, catch.</b>",
      "trecia":"Sukurti keletą perkrautų metodų (angl. Overloaded). Panaudoti bazinius Object klasės metodus toString() ir hashCode().",
      "ketvirta": "Sukurti du skirtingus metodus, kurių parametrai būtų lambda išraiškos ir predikatas (angl. Predicate). Sugalvoti savo unikalų filtrą naudojantis <b>java.util.stream.Collectors</b>"
    }
  },
  "3": {
    "head":"Parametrizuojami tipai (generics), anotacijos.",
    "aim":"Sukurti programą laisvai pasirinkta tema, kurioje būtų įgyvendinti žemiau pateikti uždaviniai.",
    "example":"Anotacijoms nuskaityti naudoti (angl. reflection) biblioteka (<span class='nuoroda'><a target='_blank' href='https://www.mkyong.com/java/java-custom-annotations-example/'>anotacijos_pvz</a></span>). Bibliotekos pavyzdys, kurioje yra naudojamos anotacijos: (<span class='nuoroda'><a href='https://projectlombok.org/'>bibliotekos_pvz</a></span>).",
    "tasks":{"pirma":"Sukurti generic klasę, kurioje realizuoti 5 skirtingus prasmingus generic metodus. Tada sukurti papildomų klasių, kuriose panaudoti wildcards  <i>(?, ? super Tipas, ? extends Tipas)</i>.",
      "antra":"Sukurti keletą skirtingų klasių/objektų ir skirtingų rūšiavimo filtrų (nemažiau 4) naudojantis šiais interfeisais <i>Comparable ir Comparator</i>. Pasirinktinai iš Collections klasės pasirinkti 5 skirtingus metodus ir juos panaudoti.",
      "trecia":"Sukurti 6 skirtingų rūšių anotacijas. Sukurtoms anotacijoms sugalvoti paskirtį ir aprašyti prasmingus metodus. Šias anotacijas panaudoti savo projekte bei pademonstruoti jų veikimą.",
      "ketvirta": "Prijungti ir panaudoti laisvai pasirinktą biblioteką, kurioje būtų naudojamos anotacijos."
    }
  }

}


