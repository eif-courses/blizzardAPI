{
  "0": {
    "head":"Struktūrinio programavimo įvadas. Darbas su ASCII kodų lentele.",
    "aim":"Laisvai pasirinkta tema sukurti algoritmą, kuriame panaudotumėte simbolius iš lentelės ASCII (angl. American Standard Code for Information Interchange).",
    "example":"<b>Pseudokodas.</b> Algoritmas aprašytas žodžiu. <a target='_blank' href='http://blog.teamtreehouse.com/java-and-everyday-objects'><span class='nuoroda'>(http://pavyzdys.lt)</span></a>. <b>UML diagrama.</b> Braižant galima naudoti bet kuriuos jums žinomus įrankius. Diagramos pavyzdį rasite čia:<a target='_blank' href='https://d2slcw3kip6qmk.cloudfront.net/marketing/pages/chart/class-diagram-for-online-shopping-system-UML/UML_class_diagram_shopping-800x621.PNG'> <span class='nuoroda'>(https://umldiagram.example).</span></a> Projektų valdymo ir automatizavimo įrankiai: <b>Maven</b> - (<a href='https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html'><span class='nuoroda'>https://maven.apache.org/</span></a>). <b>Gradle</b> - (<a href='https://docs.gradle.org/current/release-notes.html'><span class='nuoroda'>https://docs.gradle.org/</span></a>).",
    "tasks":{"pirma":"Aprašyti sugalvotą algoritmą pseudo kodu bei nubrėžti šio algoritmo blokinę schemą. ",
      "antra":"Sukurti sveikojo tipo skaičių masyvą, kuriame išsaugotumėte reikšmes atitinkančias ASCII kodų lentelei.",
      "trecia":"Išspausdinus masyvą į konsolę privalote gauti rezultatą jūsų vardas ir pavardė naudojant lotyniškus simbolius.",
      "ketvirta":"Sukurti funkciją, kuri nupieštų paveikslėlį konsolėje arba tekstiniame faile sudarytą iš simbolių esančių ASCII kodų lentelėje."
    }
  },
  "1": {
    "head":"Realaus gyvenimo algoritmas. Kūrybinė užduotis.",
    "aim":"Tikslas sukurti unikalų realaus gyvenimo bet kokios situacijos algoritmą naudojantis šiuo pavyzdžių: (<span class='nuoroda'><a href='http://people.cs.pitt.edu/~jmisurda/teaching/cs4/2064/cs0004-2064-algorithm.htm'>http://people.cs.pitt.edu/cs4/</a></span>).",
    "example":"informacija ruošiama....",
    "tasks": {
      "pirma": "Programa turi turėti atskirtas funkcijas ir numatytas išimtis. </i>Prieš tai pateikto pavyzdžio rinktis negalima</i>.",
      "antra": "Vertinimas priklauso nuo idėjos originalumo ir algoritmo sudėtingumo.",
      "trecia": "<span style='color:red'>Pastaba!</span> <i>Algoritmas nėra tik cout ar printf() funkcijų panaudojimas.</i>"
    }
  },
  "2": {
    "head":"Vidinės klasės, raktinis žodis final, vidiniai interfeisai.",
    "aim":"Sugalvoti realaus gyvenimo situaciją (temą) ir sukurti konsolinę programą, kurioje įgyvendinti žemiau pateiktus uždavinius.",
    "example":"<b>Member klasės pavyzdys.</b> Kompiuteris ir jo vidinės klasės: [<i>Procesorius, Atmintis, CD-ROM,</i> ir t.t.). <br/><b>Builder pavyzdys</b>. (<a target='_blank' href='https://gist.github.com/eif-courses/2c47471d72b645ee76ef7e00a8598e41'><span class='nuoroda'>https://gist.github.com/eif-courses/builder</span></a>).<br/><b>Filtro pavyzdys</b>. <a target='_blank' href='https://www.javatpoint.com/java-8-stream-filter'><span class='nuoroda'>https://www.javatpoint.com/java-8-stream-filter</span></a>",
    "tasks":{"pirma":"Sukurti prasmingas klases ir interfeisus: <i> kelias vidines klases (angl. Member class), vidinį interfeisą, static vidinę klasę, vidinę lokalią ir anoniminę klases.</i>",
      "antra":"Realizuoti projektavimo šabloną (angl. Design pattern) Builder. Taip pat numatyti išimtis (angl. Exceptions) naudojant šiuos raktinius žodžius: <b>try, catch.</b>",
      "trecia":"Sukurti keletą perkrautų metodų (angl. Overloaded). Panaudoti bazinius Object klasės metodus toString() ir hashCode().",
      "ketvirta": "Sukurti du skirtingus metodus, kurių parametrai būtų lambda išraiškos ir predikatas (angl. Predicate). Sugalvoti savo unikalų filtrą naudojantis <b>java.util.stream.Collectors</b>"
    }
  },
  "3": {
    "head":"Parametrizuojami tipai (generics), anotacijos.",
    "aim":"Sukurti programą laisvai pasirinkta tema, kurioje būtų įgyvendinti žemiau pateikti uždaviniai.",
    "example":"Anotacijoms nuskaityti naudoti (angl. reflection) biblioteka (<span class='nuoroda'><a target='_blank' href='https://www.mkyong.com/java/java-custom-annotations-example/'>anotacijos_pvz</a></span>). Bibliotekos pavyzdys, kurioje yra naudojamos anotacijos: (<span class='nuoroda'><a href='https://projectlombok.org/'>bibliotekos_pvz</a></span>).",
    "tasks":{"pirma":"Sukurti generic klasę, kurioje realizuoti 5 skirtingus prasmingus generic metodus. Tada sukurti papildomų klasių, kuriose panaudoti wildcards  <i>(?, ? super Tipas, ? extends Tipas)</i>.",
      "antra":"Sukurti keletą skirtingų klasių/objektų ir skirtingų rūšiavimo filtrų (nemažiau 4) naudojantis šiais interfeisais <i>Comparable ir Comparator</i>. Pasirinktinai iš Collections klasės pasirinkti 5 skirtingus metodus ir juos panaudoti.",
      "trecia":"Sukurti 6 skirtingų rūšių anotacijas. Sukurtoms anotacijoms sugalvoti paskirtį ir aprašyti prasmingus metodus. Šias anotacijas panaudoti savo projekte bei pademonstruoti jų veikimą.",
      "ketvirta": "Prijungti ir panaudoti laisvai pasirinktą biblioteką, kurioje būtų naudojamos anotacijos."
    }
  }

}


